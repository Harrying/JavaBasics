
写出try-catch语句的几种格式
			1.		try{ 
		* 				可能出现问题的代码段【throw语句】;
		* 			}catch(异常类型1 引用名){ 
		* 				问题的解决方案； 
		* 			}
		
			2.		try{ 
		* 				可能出现问题的代码段【throw语句】;
		* 			}catch(异常类型n 引用名){ 
		* 				问题的解决方案； 
		* 			}finally{
		* 				额外释放资源;
		* 			}

总结背诵 throw throws关键字区别
	* a:throws
		* 用在方法声明后面，跟的是异常类名
		* 可以跟多个异常类名，用逗号隔开
		* 表示抛出异常，由该方法的调用者来处理
	* b:throw
		* 用在方法体内，跟的是异常对象名
		* 只能抛出一个异常对象名
		* 表示抛出异常，由方法体内的语句处理

1.自定义一个 学号异常类
	定义一个学生类，包含姓名、年龄、学号信息
	学号的有效范围是 A01-16001 到 A01-16030
	如果不在这个范围，setId()就抛出 学号异常对象。
	
	定义学号异常类的时候，先将其定义成 编译时异常；完成测试。
	然后再将其修改为 运行时异常，再次完成测试代码。
	
2.程序启动，从键盘录入一个文件路径名，
如果该文件不存在 或 录入的文件是普通文件，则重新录入路径；
如果该文件存在且是目录文件，则往下执行：
	在该目录下创建一个新文件，文件名由键盘录入；
	然后获取新文件的绝对路径，文件名。
	
最后遍历当前目录中所有普通文件，输出以.txt结尾的所有普通文件。